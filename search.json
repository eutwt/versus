[{"path":"https://eutwt.github.io/versus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 versus authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eutwt.github.io/versus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryan Dickerson. Author, maintainer.","code":""},{"path":"https://eutwt.github.io/versus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dickerson R (2023). versus: Compare Data Frames. R package version 0.0.0.9000,  https://eutwt.github.io/versus/, https://github.com/eutwt/versus.","code":"@Manual{,   title = {versus: Compare Data Frames},   author = {Ryan Dickerson},   year = {2023},   note = {R package version 0.0.0.9000,  https://eutwt.github.io/versus/},   url = {https://github.com/eutwt/versus}, }"},{"path":[]},{"path":"https://eutwt.github.io/versus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compare Data Frames","text":"can install development version versus like :","code":"devtools::install_github(\"eutwt/versus\")"},{"path":"https://eutwt.github.io/versus/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Compare Data Frames","text":"Use compare() see number differing values column - compare()$summ columns one table - compare()$unmatched_cols rows one table - compare()$unmatched_rows Use value_diffs() see specific values different. Use all_value_diffs() combine value_diffs() output one table val_a val_b coerced character","code":"library(versus)  example_df_a #>              car  mpg cyl  disp  hp drat    wt vs am #> 1     Duster 360 14.3   8 360.0 245 3.21 3.570  0  0 #> 2  Mazda RX4 Wag 21.0   6 160.0 110 3.90 2.875  0  1 #> 3       Merc 230 22.8   4 140.8  95 3.92 3.150  1  0 #> 4     Datsun 710 22.8  NA 109.0  93 3.85 2.320  1  1 #> 5      Merc 240D 24.4   4 146.7  62 3.69 3.190  1  0 #> 6 Hornet 4 Drive 21.4   6 259.0 110 3.08 3.215  1  0 #> 7      Mazda RX4 21.0   6 160.0 110 3.90 2.620  0  1 #> 8        Valiant 18.1   6 225.0 105 2.76 3.460  1  0 #> 9       Merc 280 19.2   6 167.6 123 3.92 3.440  1  0 example_df_b #>               car    wt  mpg  hp cyl  disp carb drat vs #> 1       Merc 240D 3.190 26.4  62   4 146.7    2 3.69  1 #> 2         Valiant 3.460 18.1 105   6 225.0    1 2.76  1 #> 3      Duster 360 3.570 16.3 245   8 360.0    4 3.21  0 #> 4      Datsun 710 2.320 22.8  93  NA 108.0    1 3.85  1 #> 5       Merc 280C 3.440 17.8 123   6 167.6    4 3.92  1 #> 6        Merc 280 3.440 19.2 123   6 167.6    4 3.92  1 #> 7  Hornet 4 Drive 3.215 21.4 110   6 258.0    1 3.08  1 #> 8      Merc 450SE 4.070 16.4 180   8 275.8    3 3.07  0 #> 9        Merc 230 3.150 22.8  95   4 140.8    2 3.92  1 #> 10  Mazda RX4 Wag 2.875 21.0 110   6 160.0    4 3.90  0 comp <- compare(example_df_a, example_df_b, by = car) comp #> $tables #> # A tibble: 2 × 4 #>   table   expr          ncol  nrow #>   <chr>   <chr>        <int> <int> #> 1 table_a example_df_a     9     9 #> 2 table_b example_df_b     9    10 #>  #> $by #> # A tibble: 1 × 3 #>   column class_a   class_b   #>   <chr>  <chr>     <chr>     #> 1 car    character character #>  #> $summ #> # A tibble: 7 × 5 #>   column n_diffs class_a class_b value_diffs        #>   <chr>    <int> <chr>   <chr>   <list>             #> 1 mpg          2 numeric numeric <dckplyr_ [2 × 3]> #> 2 cyl          0 integer integer <dckplyr_ [0 × 3]> #> 3 disp         2 numeric numeric <dckplyr_ [2 × 3]> #> 4 hp           0 integer integer <dckplyr_ [0 × 3]> #> 5 drat         0 numeric numeric <dckplyr_ [0 × 3]> #> 6 wt           0 numeric numeric <dckplyr_ [0 × 3]> #> 7 vs           0 integer integer <dckplyr_ [0 × 3]> #>  #> $unmatched_cols #> # A tibble: 2 × 2 #>   table column #>   <chr> <chr>  #> 1 a     am     #> 2 b     carb   #>  #> $unmatched_rows #>   table        car #> 1     a  Mazda RX4 #> 2     b  Merc 280C #> 3     b Merc 450SE value_diffs(comp, disp) #>   disp_a disp_b            car #> 1    109    108     Datsun 710 #> 2    259    258 Hornet 4 Drive value_diffs(comp, mpg) #>   mpg_a mpg_b        car #> 1  14.3  16.3 Duster 360 #> 2  24.4  26.4  Merc 240D all_value_diffs(comp) #>   column val_a val_b            car #> 1    mpg  14.3  16.3     Duster 360 #> 2    mpg  24.4  26.4      Merc 240D #> 3   disp   109   108     Datsun 710 #> 4   disp   259   258 Hornet 4 Drive"},{"path":"https://eutwt.github.io/versus/reference/compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two data frames — compare","title":"Compare two data frames — compare","text":"Compare two data frames","code":""},{"path":"https://eutwt.github.io/versus/reference/compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two data frames — compare","text":"","code":"compare(   table_a,   table_b,   by,   allow_both_NA = TRUE,   coerce = TRUE,   use_duckplyr = TRUE )  value_diffs(comparison, column)  all_value_diffs(comparison)"},{"path":"https://eutwt.github.io/versus/reference/compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two data frames — compare","text":"table_a data frame table_b data frame tidy-select. Selection columns use matching rows .data_a .data_b. data frames must unique . allow_both_NA Logical. TRUE missing value data frames considered equal coerce Logical. FALSE columns class compared. use_duckplyr Logical. Run as_duckplyr_df() input tables performing comparison comparison output versus::compare() call column tidy-select. single column","code":""},{"path":"https://eutwt.github.io/versus/reference/compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two data frames — compare","text":"compare() list data frames following elements: tables data frame one row per input table showing number rows columns . data frame one row per column showing class column input tables. summ data frame one row per column common table_a table_b columns \"n_diffs\" showing number values different two tables, \"class_a\"/\"class_b\" class column table, \"value_diffs\" (nested) data frame showing values table unequal, columns unmatched_cols data frame one row per column one input table columns \"table\": table column appears , \"column\": name column, \"class\": class column. unmatched_rows data frame , row present one input table , contains column \"table\" showing table row appears columns row. value_diffs() data frame one row element col found unequal input tables ( table_a table_b original compare() call) output table columns \"val_a\"/\"val_b\": value col input tables, columns identified rows input tables. all_value_diffs() data frame value_diffs() output columns least one value difference, combined row-wise single table. facilitate combination single table, \"val_a\" \"val_b\" columns coerced character.","code":""},{"path":"https://eutwt.github.io/versus/reference/example_df_a.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified version of datasets::mtcars - version a — example_df_a","title":"Modified version of datasets::mtcars - version a — example_df_a","text":"version mtcars values altered rows/columns removed. informational purposes, used demonstrate comparison two slightly different data frames. Since values altered random, values necessarily reflect true original values. variables follows:","code":""},{"path":"https://eutwt.github.io/versus/reference/example_df_a.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified version of datasets::mtcars - version a — example_df_a","text":"","code":"example_df_a"},{"path":"https://eutwt.github.io/versus/reference/example_df_a.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Modified version of datasets::mtcars - version a — example_df_a","text":"data frame 9 rows 9 variables: car rowname corresponding datasets::mtcars row mpg Miles/(US) gallon cyl Number cylinders disp Displacement (cu..) hp Gross horsepower drat Rear axle ratio wt Weight (1000 lbs) vs Engine (0 = V-shaped, 1 = straight) Transmission (0 = automatic, 1 = manual)","code":""},{"path":"https://eutwt.github.io/versus/reference/example_df_a.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Modified version of datasets::mtcars - version a — example_df_a","text":"Sourced CRAN datasets package, modified values. Originally Henderson Velleman (1981), Building multiple regression models interactively. Biometrics, 37, 391–411.","code":""},{"path":"https://eutwt.github.io/versus/reference/example_df_b.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified version of datasets::mtcars - version b — example_df_b","title":"Modified version of datasets::mtcars - version b — example_df_b","text":"version mtcars values altered rows/columns removed. informational purposes, used demonstrate comparison two slightly different data frames. Since values altered random, values necessarily reflect true original values. variables follows:","code":""},{"path":"https://eutwt.github.io/versus/reference/example_df_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified version of datasets::mtcars - version b — example_df_b","text":"","code":"example_df_b"},{"path":"https://eutwt.github.io/versus/reference/example_df_b.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Modified version of datasets::mtcars - version b — example_df_b","text":"data frame 9 rows 9 variables: car rowname corresponding datasets::mtcars row wt Weight (1000 lbs) mpg Miles/(US) gallon hp Gross horsepower cyl Number cylinders disp Displacement (cu..) carb Number carburetors drat Rear axle ratio vs Engine (0 = V-shaped, 1 = straight)","code":""},{"path":"https://eutwt.github.io/versus/reference/example_df_b.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Modified version of datasets::mtcars - version b — example_df_b","text":"Sourced CRAN datasets package, modified values. Originally Henderson Velleman (1981), Building multiple regression models interactively. Biometrics, 37, 391–411.","code":""},{"path":"https://eutwt.github.io/versus/reference/versus-package.html","id":null,"dir":"Reference","previous_headings":"","what":"versus: Compare Data Frames — versus-package","title":"versus: Compare Data Frames — versus-package","text":"Compare two tables","code":""},{"path":[]},{"path":"https://eutwt.github.io/versus/reference/versus-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"versus: Compare Data Frames — versus-package","text":"Maintainer: Ryan Dickerson fresh.tent5866@fastmail.com","code":""}]
